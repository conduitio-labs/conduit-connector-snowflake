// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-connector-sdk/tree/main/cmd/paramgen

package destination

import (
	sdk "github.com/conduitio/conduit-connector-sdk"
)

func (Config) Parameters() map[string]sdk.Parameter {
	return map[string]sdk.Parameter{
		"snowflake.compression": {
			Default:     "gzip",
			Description: "snowflake.compression to use when staging files in Snowflake",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
				sdk.ValidationInclusion{List: []string{"gzip", "zstd", "copy"}},
			},
		},
		"snowflake.csvGoroutines": {
			Default:     "1",
			Description: "For CSV processing, the number of goroutines to concurrently process CSV rows.",
			Type:        sdk.ParameterTypeInt,
			Validations: []sdk.Validation{},
		},
		"snowflake.database": {
			Default:     "",
			Description: "snowflake.database for the snowflake connection",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
			},
		},
		"snowflake.fileUploadThreads": {
			Default:     "30",
			Description: "Number of threads to run for PUT file uploads.",
			Type:        sdk.ParameterTypeInt,
			Validations: []sdk.Validation{},
		},
		"snowflake.format": {
			Default:     "csv",
			Description: "Data type of file we upload and copy data from to snowflake",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
				sdk.ValidationInclusion{List: []string{"csv"}},
			},
		},
		"snowflake.host": {
			Default:     "",
			Description: "snowflake.host for the snowflake connection",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
			},
		},
		"snowflake.keepAlive": {
			Default:     "true",
			Description: "Whether to keep the session alive even when the connection is idle.",
			Type:        sdk.ParameterTypeBool,
			Validations: []sdk.Validation{},
		},
		"snowflake.namingPrefix": {
			Default:     "meroxa",
			Description: "Prefix to append to update_at , deleted_at, create_at at destination table",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{},
		},
		"snowflake.password": {
			Default:     "",
			Description: "snowflake.password for the snowflake connection",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
			},
		},
		"snowflake.port": {
			Default:     "",
			Description: "snowflake.port for the snowflake connection",
			Type:        sdk.ParameterTypeInt,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
			},
		},
		"snowflake.primaryKey": {
			Default:     "",
			Description: "Primary key of the source table",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
			},
		},
		"snowflake.schema": {
			Default:     "",
			Description: "snowflake.schema for the snowflake connection",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
			},
		},
		"snowflake.stage": {
			Default:     "",
			Description: "Snowflake snowflake.stage to use for uploading files before merging into destination table.",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
			},
		},
		"snowflake.table": {
			Default:     "",
			Description: "snowflake.table name.",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
			},
		},
		"snowflake.username": {
			Default:     "",
			Description: "snowflake.username for the snowflake connection",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
			},
		},
		"snowflake.warehouse": {
			Default:     "",
			Description: "snowflake.warehouse for the snowflake connection",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
			},
		},
	}
}
